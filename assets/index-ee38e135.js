import{r as m,j as e,c as f,L as N,H as w}from"./index-1f1a2041.js";const k=new Map;function L(n,s){if(m.useSyncExternalStore===void 0)throw new TypeError('You are using React 17 or below. Install with "npm install use-local-storage-state@17".');const[a]=m.useState(s?.defaultValue);if(typeof window>"u")return[a,()=>{},{isPersistent:!0,removeItem:()=>{}}];const t=s?.serializer;return I(n,a,s?.storageSync,t?.parse,t?.stringify)}function I(n,s,a=!0,t=C,c=JSON.stringify){!k.has(n)&&s!==void 0&&b(()=>localStorage.getItem(n))===null&&b(()=>localStorage.setItem(n,c(s)));const i=m.useRef({item:null,parsed:s}),h=m.useSyncExternalStore(m.useCallback(l=>{const u=p=>{n===p&&l()};return _.add(u),()=>{_.delete(u)}},[n]),()=>{var l;const u=(l=b(()=>localStorage.getItem(n)))!==null&&l!==void 0?l:null;if(k.has(n))i.current={item:u,parsed:k.get(n)};else if(u!==i.current.item){let p;try{p=u===null?s:t(u)}catch{p=s}i.current={item:u,parsed:p}}return i.current.parsed},()=>s),j=m.useCallback(l=>{const u=l instanceof Function?l(i.current.parsed):l;try{localStorage.setItem(n,c(u)),k.delete(n)}catch{k.set(n,u)}v(n)},[n,c]);return m.useEffect(()=>{if(!a)return;const l=u=>{u.storageArea===b(()=>localStorage)&&u.key===n&&v(n)};return window.addEventListener("storage",l),()=>window.removeEventListener("storage",l)},[n,a]),m.useMemo(()=>[h,j,{isPersistent:h===s||!k.has(n),removeItem(){b(()=>localStorage.removeItem(n)),k.delete(n),v(n)}}],[n,j,h,s])}const _=new Set;function v(n){for(const s of[..._])s(n)}function C(n){return n==="undefined"?void 0:JSON.parse(n)}function b(n){try{return n()}catch{return}}const E="_mapManager_1g8lr_1",B="_mapButton_1g8lr_7",U="_mapListContainer_1g8lr_14",M="_mapList_1g8lr_14",P="_mapItem_1g8lr_41",A="_mapItemButton_1g8lr_49",R="_mapItemDeleteButton_1g8lr_57",O="_keyboard_1g8lr_75",T="_keyRow_1g8lr_81",z="_key_1g8lr_75",F="_keyUnknown_1g8lr_96",q="_keyDead_1g8lr_100",Y="_squareKey_1g8lr_104",J="_longKey_1g8lr_109",H="_keyPressed_1g8lr_114",r={mapManager:E,mapButton:B,mapListContainer:U,mapList:M,mapItem:P,mapItemButton:A,mapItemDeleteButton:R,keyboard:O,keyRow:T,key:z,keyUnknown:F,keyDead:q,squareKey:Y,longKey:J,keyPressed:H};function Q({currentMap:n,setCurrentMap:s,addMap:a,deleteMap:t,maps:c}){return e.jsxs("div",{className:r.mapManager,children:[e.jsx("button",{className:r.mapButton,type:"button",children:n??"Select a map..."}),e.jsxs("div",{className:r.mapListContainer,children:[e.jsx("input",{type:"text",placeholder:"Add a new map (press Enter to confirm)",onKeyDown:i=>{i.key==="Enter"&&(a(i.target.value),i.target.value=""),i.stopPropagation()}}),e.jsx("ul",{className:r.mapList,children:c.map(i=>e.jsxs("li",{className:r.mapItem,children:[e.jsx("button",{type:"button",className:r.mapItemButton,onClick:h=>{s(i),h.target.blur()},children:i}),e.jsx("button",{type:"button",className:r.mapItemDeleteButton,onClick:()=>t(i),"aria-label":"Delete this map",children:"â€“"})]},i))})]})]})}function K({keys:n,keysPressed:s,keyboardMap:a,index:t}){return n.map(c=>e.jsx("span",{title:c,className:f(r.key,r.squareKey,s.includes(c)&&r.keyPressed,(a?.[c]?.[t]==null||a?.[c]?.[t]==="Unidentified")&&r.keyUnknown,a?.[c]?.[t]==="Dead"&&r.keyDead),children:["Dead","Unidentified"].includes(a?.[c]?.[t])?null:a?.[c]?.[t]},c))}function W({keyboardMap:n}){return e.jsxs("table",{children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{children:"Key"}),e.jsx("th",{children:"Unmodified"}),e.jsx("th",{children:e.jsx("kbd",{children:"Shift"})}),e.jsx("th",{children:e.jsx("kbd",{children:"Alt"})}),e.jsxs("th",{children:[e.jsx("kbd",{children:"Shift"})," + ",e.jsx("kbd",{children:"Alt"})]})]})}),e.jsx("tbody",{children:Object.entries(n).map(([s,a])=>e.jsxs("tr",{children:[e.jsx("td",{children:e.jsx("kbd",{children:s})}),a.map((t,c)=>e.jsx("td",{className:t==="Dead"?r.keyDead:t==="Unidentified"||!t?r.keyUnknown:void 0,children:t??"?"},c))]},s))})]})}function G({keyboardMap:n}){const s=[];for(const[a,t]of Object.entries(n))t[0]&&!["Unidentified","Dead"].includes(t[0])&&s.push([t[0],e.jsx("kbd",{children:a})]),t[1]&&!["Unidentified","Dead"].includes(t[1])&&s.push([t[1],e.jsxs(e.Fragment,{children:[e.jsx("kbd",{children:"Shift"})," + ",e.jsx("kbd",{children:a})]})]),t[2]&&!["Unidentified","Dead"].includes(t[2])&&s.push([t[2],e.jsxs(e.Fragment,{children:[e.jsx("kbd",{children:"Alt"})," + ",e.jsx("kbd",{children:a})]})]),t[3]&&!["Unidentified","Dead"].includes(t[3])&&s.push([t[3],e.jsxs(e.Fragment,{children:[e.jsx("kbd",{children:"Shift"})," + ",e.jsx("kbd",{children:"Alt"})," + ",e.jsx("kbd",{children:a})]})]);return e.jsxs("table",{children:[e.jsx("thead",{children:e.jsxs("tr",{children:[e.jsx("th",{children:"Letter"}),e.jsx("th",{children:"Key"})]})}),e.jsx("tbody",{children:s.sort((a,t)=>a[0].localeCompare(t[0],"en-US")).map(([a,t])=>e.jsxs("tr",{children:[e.jsx("td",{children:a}),e.jsx("td",{children:t})]},a))})]})}function Z(){const[n,s]=m.useState(0),[a,t]=L("keyboardMaps",{defaultValue:{}}),[c,i]=m.useState(null),[h,j]=m.useState([]),[l,u]=m.useState(void 0),p=l===void 0?void 0:a[l];m.useEffect(()=>{const x=o=>{j(d=>[...d,o.code]),!["Backspace","CapsLock","ContextMenu","Control","Enter","Fn","Meta"," ","Tab"].includes(o.key)&&(o.key==="Shift"?s(d=>d===2?3:1):o.key==="Alt"?s(d=>d===1?3:2):t(d=>{if(i(null),!l)return i("No map selected"),d;if(!(l in d))return i("Unexpected: modifying an unknown key map"),d;const g=(o.shiftKey?1:0)+(o.altKey?2:0);return d[l][o.code]?.[g]!=null&&d[l][o.code][g]!==o.key?(i("You are modifying a key that is already mapped. Consider creating a new map."),d):(o.key==="Dead"&&i("Note: composite keys are not supported"),o.key==="Unidentified"&&i("Note: this key is not recognized by the browser"),d[l][o.code]??=[null,null,null,null],d[l][o.code][g]=o.key,{...d})}))},y=o=>{j(d=>d.filter(g=>g!==o.code)),o.key==="Shift"?s(d=>d===3?2:0):o.key==="Alt"&&s(d=>d===3?1:0)};return window.addEventListener("keydown",x),window.addEventListener("keyup",y),()=>{window.removeEventListener("keydown",x),window.removeEventListener("keyup",y)}},[t,l]);const S=m.useCallback(x=>{t(y=>x in y?(i("Map already exists"),y):(y[x]={},{...y})),u(x)},[t]),D=m.useCallback(x=>{u(y=>{if(console.log(y,x),y!==x)return y;const o=Object.keys(a)[0];return o===y?Object.keys(a)[1]:o}),t(y=>x&&x in y?(delete y[x],{...y}):(i("Unexpected: deleting an unknown key map"),y))},[a,t]);return e.jsxs("div",{children:[e.jsx("h1",{children:"Keyboard visualizer"}),e.jsxs("div",{style:{display:"flex",flexDirection:"row",gap:"1em"},children:[e.jsx(Q,{currentMap:l,setCurrentMap:u,addMap:S,deleteMap:D,maps:Object.keys(a)}),e.jsx("div",{style:{color:"var(--color-red)"},children:c})]}),e.jsxs("div",{className:r.keyboard,children:[e.jsxs("div",{className:r.keyRow,children:[e.jsx(K,{keys:["Backquote","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","Digit0","Minus","Equal"],index:n,keyboardMap:p,keysPressed:h}),e.jsx("span",{className:f(r.key,r.longKey,h.includes("Backspace")&&r.keyPressed),children:"Backspace"})]}),e.jsxs("div",{className:r.keyRow,children:[e.jsx("span",{className:f(r.key,r.longKey,h.includes("Tab")&&r.keyPressed),children:"Tab"}),e.jsx(K,{keys:["KeyQ","KeyW","KeyE","KeyR","KeyT","KeyY","KeyU","KeyI","KeyO","KeyP","BracketLeft","BracketRight","Backslash"],index:n,keyboardMap:p,keysPressed:h})]}),e.jsxs("div",{className:r.keyRow,children:[e.jsx("span",{className:f(r.key,r.longKey,h.includes("CapsLock")&&r.keyPressed),children:"Caps lock"}),e.jsx(K,{keys:["KeyA","KeyS","KeyD","KeyF","KeyG","KeyH","KeyJ","KeyK","KeyL","Semicolon","Quote"],index:n,keyboardMap:p,keysPressed:h}),e.jsx("span",{className:f(r.key,r.longKey,h.includes("Enter")&&r.keyPressed),children:"Enter"})]}),e.jsxs("div",{className:r.keyRow,children:[e.jsx("span",{className:f(r.key,r.longKey,h.includes("ShiftLeft")&&r.keyPressed),children:"Shift"}),e.jsx(K,{keys:["KeyZ","KeyX","KeyC","KeyV","KeyB","KeyN","KeyM","Comma","Period","Slash"],index:n,keyboardMap:p,keysPressed:h}),e.jsx("span",{className:f(r.key,r.longKey,h.includes("ShiftRight")&&r.keyPressed),children:"Shift"})]})]}),e.jsxs("p",{children:["After creating or selecting a map, press any key to record its mapping. You can also hold ",e.jsx("kbd",{children:"Shift"})," or ",e.jsx("kbd",{children:"Option"})," to record those compound keys."]}),e.jsxs("p",{children:["The key codes displayed in ",e.jsx("code",{children:"<kbd>"})," (such as"," ",e.jsx("kbd",{children:"KeyA"}),") are"," ",e.jsx(N,{href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code",children:"standard"})," ","codes, which typically correspond to the keys on a US keyboard. You can hover over any key in the diagram above to see its code."]}),p&&e.jsxs(e.Fragment,{children:[e.jsx(w,{level:2,children:"Keyboard map"}),e.jsx(W,{keyboardMap:p}),e.jsx(w,{level:2,children:"Key search"}),e.jsx(G,{keyboardMap:p})]})]})}const $={title:"Keyboard visualizer",description:"A tool that visualizes your keyboard layout"};export{Z as default,$ as meta};
